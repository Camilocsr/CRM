{
  "compilerOptions": {
    /* Basic Settings */
    "target": "es2016",                                   /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "commonjs",                                 /* Specify what module code is generated. */
    "lib": ["ESNext"],                                   /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    
    /* Modules */
    "moduleResolution": "node",                          /* Specify how TypeScript looks up a file from a given module specifier. */
    
    /* JavaScript Support */
    "allowJs": true,                                    /* Allow JavaScript files to be a part of your program. Use the 'checkJs' option to get errors from these files. */
    
    /* Emit Settings */
    "sourceMap": true,                                  /* Create source map files for emitted JavaScript files. */
    "outDir": "./dist",                                 /* Specify an output folder for all emitted files. */
    "removeComments": true,                             /* Disable emitting comments. */
    
    /* Interop Constraints */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    
    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "skipLibCheck": true,                                 /* Skip type checking all .d.ts files. */
    
    /* Custom Type Roots */
    "typeRoots": ["./node_modules/@types", "./@types"]
  },
  "include": ["src/**/*"],                               /* Specify the files to be included in the compilation. */
  "exclude": ["node_modules", "dist"]                   /* Exclude certain files from the compilation. */
}
